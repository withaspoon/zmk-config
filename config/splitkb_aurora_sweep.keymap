/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_sv.h"

#define L_ZERO 0
#define L_SYM 1
#define L_NUM 2
#define L_NAV 3

#define EQ EQUAL

#define MEH LC(LS(LALT))

#define HLCTRL(KEY) &hml LCTRL KEY
#define HLALT(KEY) &hml LALT KEY
#define HLGUI(KEY) &hml LGUI KEY

#define HRCTRL(KEY) &hml RCTRL KEY
#define HRALT(KEY) &hml RALT KEY
#define HRGUI(KEY) &hml RGUI KEY

#define MOD_MORPH_MASKED(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
    keep-mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define MOD_MORPH(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hml: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9  15 16 17 18 19  25 26 27 28 29  30 31 32 33>;
        };
        
        hmr: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4  10 11 12 13 14  20 21 22 23 24  30 31 32 33>;
        };

        MOD_MORPH(semi, COMMA, SEMICOLON)
        MOD_MORPH(dot, DOT, COLON)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            //  pos 0        pos 1        pos 2        pos 3        pos 4      |    pos 5       pos 6        pos 7        pos 8        pos 9
            &kp Q            &kp W        &kp F        &kp P        &kp B           &kp J       &kp L        &kp U        &kp Y        &kp BSPC
            //  pos 10       pos 11       pos 12       pos 13       pos 14     |    pos 15      pos 16       pos 17       pos 18       pos 19 
            &kp A            HLCTRL(R)    HLALT(S)     HLGUI(T)     &kp G           &kp M       HRGUI(N)     HRALT(E)     HRCTRL(I)    &kp O
            //  pos 20       pos 21       pos 22       pos 23       pos 24     |    pos 25      pos 26       pos 27       pos 28       pos 29 
            &lt L_NUM Z      &kp X        &kp C        &kp D        &kp V           &kp K       &kp H        &mm_semi     &mm_dot      &kp MINUS
            //                                         pos 30       pos 31     |    pos 32      pos 33
                                                       &mt MEH SPC  &sk LSHIFT      &sk RCTRL   &mo L_SYM
            >;
        };

        symbols {
            bindings = <
            //  pos 0        pos 1        pos 2        pos 3        pos 4      |    pos 5       pos 6        pos 7        pos 8        pos 9
            &kp ESC          &kp HASH     &kp AT       &kp DLLR     &kp PRCNT       &kp LT      &kp LBRC     &kp RBRC     &kp GT       &kp BSPC
            //  pos 10       pos 11       pos 12       pos 13       pos 14     |    pos 15      pos 16       pos 17       pos 18       pos 19 
            &kp TAB          HLCTRL(EQ)   HLALT(GRAVE) HLGUI(DQT)   &kp SQT         &kp QMARK   HRGUI(LPAR)  HRALT(RPAR)  HRCTRL(PIPE) &kp ENTER
            //  pos 20       pos 21       pos 22       pos 23       pos 24     |    pos 25      pos 26       pos 27       pos 28       pos 29 
            &kp TILDE        &kp CARET    &kp AMPS     &kp PLUS     &kp STAR        &kp EXCL    &kp LBKT     &kp RBKT     &kp SLASH    &kp BSLH
            //                                         pos 30       pos 31     |    pos 32      pos 33
                                                       &trans       &trans          &trans      &none
            >;
        };

        numbers {
            bindings = <
            //  pos 0        pos 1        pos 2        pos 3        pos 4      |    pos 5       pos 6        pos 7        pos 8        pos 9
            &none            &none        &none        &none        &none           &none       &kp N1       &kp N2       &kp N3       &none
            //  pos 10       pos 11       pos 12       pos 13       pos 14     |    pos 15      pos 16       pos 17       pos 18       pos 19 
            &none            &sk LCTRL    &sk LALT     &sk LGUI     &none           &none       HRGUI(N4)    HRALT(N5)    HRCTRL(N6)   &none
            //  pos 20       pos 21       pos 22       pos 23       pos 24     |    pos 25      pos 26       pos 27       pos 28       pos 29 
            &none            &none        &none        &none        &none           &kp N0      &kp N7       &kp N8       &kp N9       &to L_NAV
            //                                         pos 30       pos 31     |    pos 32      pos 33
                                                       &trans       &trans          &trans      &to L_ZERO
            >;
        };

        navigation {
            bindings = <
            //  pos 0        pos 1        pos 2        pos 3        pos 4      |    pos 5       pos 6        pos 7        pos 8        pos 9
            &kp ESC          &none        &none        &none        &none           &none       &none        &kp UP       &none        &kp BSPC
            //  pos 10       pos 11       pos 12       pos 13       pos 14     |    pos 15      pos 16       pos 17       pos 18       pos 19 
            &kp TAB          &sk LCTRL    &sk LALT     &sk LGUI     &none           &none       &kp LEFT     &kp DOWN     &kp RIGHT    &kp ENTER
            //  pos 20       pos 21       pos 22       pos 23       pos 24     |    pos 25      pos 26       pos 27       pos 28       pos 29 
            &none            &none        &none        &none        &none           &none       &none        &none        &none        &none
            //                                         pos 30       pos 31     |    pos 32      pos 33
                                                       &trans       &trans          &trans      &to L_ZERO
            >;
        };
    };
};
